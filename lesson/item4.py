# Списки
	# Список - это набор элементов, следующих в определенном порядке. В список можно поместить любые данные, при том, что они даже не будут между собой связаны

# 1. Синтаксис списка
result = ['one', 'two', 'three', 'four', 'five', 'six', 'seven'];
print(result);

# 2. Обращение к элементам списка
	# Индексы начинаются с 0, а не с 1
	# Чтобы обратиться к определенному элементу в списке, нужно укзаать его индекс

print(result[2]);

# 3. Обращение к последнему элементу списка
print(result[-1]);

# 4. Изменение элементов в списке
result[0] = 'one one';
print(result);

# 5. Добавление элементов в список

	# Добавление элементов в конец списка
result.append('eight');
print(result);

	# Добавление элемента в произвольную позицию
result.insert(0, 'new item'); # (позиция, 'элемент')


# 6. Удаление элементов из списка

	# Удаление элемента с использованием команды del (если известен его индекс)
del result[0]; # Удаляем первый элемент с списке
print(result);

	# Удаление элемента с использованием метода pop() - удаляет последний элемент из списка, но позоляет с ним работать после удаления
print('Старый список');
print(result);

print('Новый список с удалённым последним элементом');
result2 = result.pop();
print(result2);

# 7. Извлечение элементов из произвольной позии списка

	# Метод pop() может использоваться дял удаления элемента в произвольной позии списка, для этого нужно указать индекс удаляемого элемента в круглых скобках
result3 = result.pop(-1);
print(result3);

# 8. Удаление элементов по значению

result.remove('six'); # удаляем элемент из списка с названием - six
print(result);

# 9. Упорядочение списка

	# Постоянная сортировка списка методом sort() - в алфавитном порядке
result.sort();
print(result);

	# Сортировка по алфавиту в обратном порядке
result.sort(reverse=True);
print(result);

	# Временная сортировка списка функцией sorted() - чтобы сохранить исходный порядок списка, но на время вывести его в нужной форме используется данная функция (фактически это не приведёт к измению порядка списка)
print(sorted(result)); # В алфавитном порядке
print(sorted(result, reverse=True)); # В обратном алфавитном порядке

# 10. Вывод списка в обратном порядке (не по алфавиту, а по порядку)

result.reverse();
print(result);

#11 . Определение длины списка

	# Чтобы определить длину списка нужн овоспользоваться функций len()
print(len(result));